#!/usr/bin/env -S node --trace-uncaught --expose-gc --unhandled-rejections=strict
import {createRequire as topLevelCreateRequire} from 'module';const require=topLevelCreateRequire(import.meta.url)
import _ from"crypto";var p=new Uint8Array(256),c=p.length;function h(){return c>p.length-16&&(_.randomFillSync(p),c=0),p.slice(c,c+=16)}var o=[];for(let t=0;t<256;++t)o.push((t+256).toString(16).slice(1));function U(t,e=0){return o[t[e+0]]+o[t[e+1]]+o[t[e+2]]+o[t[e+3]]+"-"+o[t[e+4]]+o[t[e+5]]+"-"+o[t[e+6]]+o[t[e+7]]+"-"+o[t[e+8]]+o[t[e+9]]+"-"+o[t[e+10]]+o[t[e+11]]+o[t[e+12]]+o[t[e+13]]+o[t[e+14]]+o[t[e+15]]}import j from"crypto";var f={randomUUID:j.randomUUID};function k(t,e,n){if(f.randomUUID&&!e&&!t)return f.randomUUID();t=t||{};let r=t.random||(t.rng||h)();if(r[6]=r[6]&15|64,r[8]=r[8]&63|128,e){n=n||0;for(let a=0;a<16;++a)e[n+a]=r[a];return e}return U(r)}var x=k;var O,T,y,d,I,E,g,D,b;({default:O}=await import(process.env.CONTABO_KEY_JS));d=new FormData;d.append("grant_type","password");E=Object.entries(O);for(b of E)[I,D]=b,d.append(I,D);g=async(t,e)=>{var n,r,a;for(a=9;--a;)try{r=await fetch(t,e);break}catch(i){n=i,console.trace(),console.error(t),console.error(n)}if(r.status!==204){if(r=await r.json(),r.error)throw r;return r}};({access_token:T}=await g("https://auth.contabo.com/auth/realms/contabo/protocol/openid-connect/token",{method:"POST",body:new URLSearchParams(d)}));var s=y=(t,e={})=>g("https://api.contabo.com/v1/"+t,{headers:{"Content-Type":"application/json",Authorization:"Bearer "+T,"x-trace-id":new Date-0,"x-request-id":x()},...e});y.post=(t,e)=>y(t,{method:"POST",body:JSON.stringify(e)});var P;P={24:1,10:4,8:3,6:2,4:1};(async()=>{var t,e,n,r,a,i,u,v,m,l,w,S;({data:n}=await s("compute/instances")),m=[];for(w of n){({instanceId:a,displayName:r,cpuCores:t}=w),i=P[t]||1,{data:n}=await s(`compute/instances/${a}/snapshots`),u=n.length,console.log("\u276F",r,"snapshots limit",i),v=n.reverse();for(S of v){if({snapshotId:l,createdDate:e}=S,u<i)break;console.log(u--,"rm",l,e),await s(`compute/instances/${a}/snapshots/${l}`,{method:"DELETE"})}m.push(await s.post(`compute/instances/${a}/snapshots`,{name:new Date().toISOString().slice(0,19)}))}return m})();
